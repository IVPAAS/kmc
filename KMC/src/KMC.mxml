<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:view="com.kaltura.kmc.view.*" layout="absolute"
				minWidth="955" minHeight="600" creationComplete="creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import com.kaltura.KalturaClient;
			import com.kaltura.commands.uiConf.UiConfGet;
			import com.kaltura.config.KalturaConfig;
			import com.kaltura.events.KalturaEvent;
			import com.kaltura.kmc.business.KmcModuleLoader;
			import com.kaltura.kmc.events.KmcModuleEvent;
			import com.kaltura.kmc.events.KmcNavigationEvent;
			import com.kaltura.kmc.model.KmcModelLocator;
			import com.kaltura.kmc.modules.KmcModule;
			import com.kaltura.utils.KUtils;
			import com.kaltura.utils.ObjectHelpers;
			import com.kaltura.vo.KalturaUiConf;
			
			import mx.core.Application;
			import mx.events.FlexEvent;
			import mx.events.ModuleEvent;
			import mx.modules.ModuleLoader;

			// ==============================================================================
			// members
			// ==============================================================================
			
			/**
			 * a global access point to the application's flashvars,
			 * all keys are converted to lower case and no underscores.
			 * */
			public static var flashvars:Object;

//			KMC UIConf looks like this:
//			<root>
//				<skinPath>http://www.../kmcSkin.swf</skinPath>
//				<helpPage>http://www.../helpPage.html</helpPage>
//				<modules>
//					<module id="dashboard" uiconf="3451"/>
//					<module id="studio" uiconf="54635"/>
//					<module id="content" uiconf="347864"/>
//					<module id="settings" uiconf="345678"/>
//					<module id="analytics" uiconf="341231"/>
//				</modules>
//			</root> 

			/**
			 * application model
			 * */
			private var _modelLocator:KmcModelLocator = KmcModelLocator.getInstance();

			/**
			 * module loader
			 * */
			private var _kmcModuleLoader:KmcModuleLoader;
			
			/**
			 * path from KMC.swf to module swfs.
			 * */
			private var _modulesFolder:String = "modules";

			/**
			 * KMC UIConf
			 * */
			private var _uiconf:XML;

			// ==============================================================================
			// methods
			// ==============================================================================
			
			/**
			 * process flashvars and load KMC uiconf
			 * */
			protected function creationCompleteHandler(event:FlexEvent):void {

				// listen to module navigation requests
				this.addEventListener(KmcNavigationEvent.NAVIGATE, navigateToModule);

				// save flashvars
				var objParam:Object = Application.application.parameters;
				objParam = ObjectHelpers.lowerNoUnderscore(objParam);
				flashvars = objParam;

				if (objParam.modulespath) {
					_modulesFolder = objParam.modulespath;
				}

				// create KalturaClient:
				var configuration:KalturaConfig = new KalturaConfig();
				configuration.partnerId = objParam.partnerid;
				configuration.ignoreNull = 1;
				configuration.protocol = objParam.protocol ? objParam.protocol : "http://";
				configuration.domain = KUtils.hostFromCode(objParam.host);
				configuration.srvUrl = objParam.srvurl;
				configuration.clientTag = "kmc";

				_modelLocator.kalturaClient = new KalturaClient(configuration);
				_modelLocator.kalturaClient.ks = objParam.ks;
				
				// create a module loader:
				_kmcModuleLoader = new KmcModuleLoader();
				_kmcModuleLoader.addEventListener(KmcModuleEvent.MODULE_LOAD_ERROR, onModuleLoadError);
				_kmcModuleLoader.addEventListener(KmcModuleEvent.MODULE_LOADED, onModuleReady);

				// load KMC uiconf 
				var uiconf:UiConfGet = new UiConfGet(objParam.kmcuiconf);
				uiconf.addEventListener(KalturaEvent.COMPLETE, uiconfLoadHandler);
				uiconf.addEventListener(KalturaEvent.FAILED, uiconfFailedHandler);
				_modelLocator.kalturaClient.post(uiconf);
			}


			/**
			 * UiConf failed to load, alert user
			 */
			protected function uiconfFailedHandler(event:KalturaEvent):void {
				throw new Error("KMC.mxml, KMC uiconf load failed:", event.error.errorMsg);
			}


			/**
			 * module failed to load, alert user
			 */
			protected function onModuleLoadError(event:KmcModuleEvent):void {
				throw new Error("KMC.mxml, Module load failed:", event.errorText);
			}


			/**
			 * Kmc uiConf loaded. Parse it and load skin and relevant modules.
			 */
			protected function uiconfLoadHandler(event:KalturaEvent):void {
				_uiconf = new XML((event.data as KalturaUiConf).confFile);
				//TODO load skin

				// load modules :
				var moduleList:XMLList = _uiconf.modules.module;
				var total:int = moduleList.length();
				var moduleInfo:XML;
				for (var i:int = 0; i < total; i++) {
					moduleInfo = moduleList[i];
					var url:String = _modulesFolder + "/" + moduleInfo.@id + ".swf";
					var ml:ModuleLoader = _kmcModuleLoader.loadKmcModule(url, moduleInfo.@id);
					mainViewStack.addChild(ml);
				}
			}


			/**
			 * initialize module
			 * */
			protected function onModuleReady(event:KmcModuleEvent):void {
				// the moduleLoader
				var ml:ModuleLoader = event.moduleLoader;
				
				// the loaded module's id:
				var moduleid:String = _kmcModuleLoader.getModuleId(ml);
				
				// a list of all modules:
				var moduleList:XMLList = _uiconf.modules.module;
				
				// the loaded module:
				var mod:KmcModule = ml.child as KmcModule;
				mod.percentHeight = 100;
				mod.percentWidth = 100;
				mod.id = moduleid;
				
				// the uiconf id this module should load:
				var uiconfid:String = moduleList.(@id == moduleid)[0].@uiconf;
				mod.init(KmcModelLocator.getInstance().kalturaClient, uiconfid);
			}



			/**
			 * Switch to a different KMC module (tab).
			 * Can also include subtab on the new module.
			 * @param e		event holding navigation request info.
			 * */
			private function navigateToModule(e:KmcNavigationEvent):void {
				trace("KMC going to", e.module, e.subtab != null ? "> " + e.subtab : "");
			}


			protected function btn_clickHandler(event:MouseEvent):void {
				if (mainViewStack.selectedIndex == mainViewStack.numChildren - 1) {
					mainViewStack.selectedIndex = 0;
				}
				else {
					mainViewStack.selectedIndex++;
				}
			}
		]]>
	</mx:Script>
	<mx:ViewStack id="mainViewStack" width="100%" height="100%"/>
	<mx:Button id="btn" click="btn_clickHandler(event)" label="switch"/>
</mx:Application>
