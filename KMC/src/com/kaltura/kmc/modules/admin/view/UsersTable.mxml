<?xml version="1.0" encoding="utf-8"?>
<mx:DataGrid xmlns:mx="http://www.adobe.com/2006/mxml" height="100%" verticalScrollPolicy="auto"
			 allowMultipleSelection="true" rowHeight="36" dropEnabled="true" dragMoveEnabled="false"
			 itemClick="setSelection(event);"
			 xmlns:view="com.kaltura.kmc.modules.content.view.*">
	<mx:Metadata>
		[Event(name="drillDown", type="flash.events.Event")] 
		[Event(name="deleteUser", type="flash.events.Event")] 
		[Event(name="toggleBlock", type="flash.events.Event")] 
		[Event(name="selectUser", type="flash.events.Event")] 
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import com.kaltura.types.KalturaUserStatus;
			import com.kaltura.vo.KalturaUser;
			
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.resources.ResourceManager;

			// ==================================================================
			// constants
			// ==================================================================

			/**
			 * defines the value of the type property for the <code>drillDown</code> event.
			 * */
			public static const DRILL_DOWN:String = "drillDown";

			/**
			 * defines the value of the type property for the <code>delete</code> event.
			 * */
			public static const DELETE_USER:String = "deleteUser";

			/**
			 * defines the value of the type property for the <code>toggleBlock</code> event.
			 * */
			public static const TOGGLE_BLOCK:String = "toggleBlock";

			/**
			 * defines the value of the type property for the <code>selectUser</code> event.
			 * */
			public static const SELECT_USER:String = "selectUser";


			// ==================================================================
			// methods
			// ==================================================================


			/**
			 * selection or deselection was made
			 */
			public function setSelection(event:ListEvent):void {
				if (event.itemRenderer.data) {
					dispatchEvent(new Event(UsersTable.SELECT_USER));
				}
			}


			/**
			 * open the entry drilldown popup
			 * */
			private function editEntry():void {
				dispatchEvent(new Event(UsersTable.DRILL_DOWN));
			}


			/**
			 * show delete confirmation box
			 * */
			private function confirmDelete():void {
				Alert.show(ResourceManager.getInstance().getString('admin', 'confirm_delete', [selectedUser.fullName]), ResourceManager.getInstance().getString('admin', 'confirm_delete_title'), Alert.OK | Alert.CANCEL, null, deleteEntry);

			}


			/**
			 * delete the selected entry
			 * */
			private function deleteEntry(e:CloseEvent):void {
				if (e.detail == Alert.OK) {
					// request to delete the entry
					dispatchEvent(new Event(UsersTable.DELETE_USER));
				}
			}


			/**
			 * show block toggle confirmation box
			 * */
			private function confirmBlock():void {
				var key:String = "confirm_unblock";
				if ((selectedItem as KalturaUser).status == KalturaUserStatus.ACTIVE) {
					key = "confirm_block";
				}
				Alert.show(ResourceManager.getInstance().getString('admin', key), ResourceManager.getInstance().getString('admin', key + '_title'), Alert.OK | Alert.CANCEL, null, deleteEntry);
			}


			/**
			 * toggle block / unblock on the selected entry
			 * */
			private function toggleBlockEntry(e:CloseEvent):void {
				if (e.detail == Alert.OK) {
					// request to toggle user block status
					dispatchEvent(new Event(UsersTable.TOGGLE_BLOCK));
				}
			}


			// ==================================================================
			// item-renderer functions
			// ==================================================================

			/**
			 * show formatted date
			 * */
			private function formatDate(date:Number):String {
				var df:DateFormatter = new DateFormatter();
				df.formatString = resourceManager.getString('admin', 'list_date_format');
				var dt:Date = new Date();
				dt.setTime(date * 1000);
				return df.format(dt);
			};


			/**
			 * translate user status to string
			 * */
			private function getUserStatus(item:Object, column:DataGridColumn):String {
				var res:String = '';
				switch (item.status) {
					case KalturaUserStatus.ACTIVE:
						res = ResourceManager.getInstance().getString('admin', 'active');
					case KalturaUserStatus.BLOCKED:
						res = ResourceManager.getInstance().getString('admin', 'blocked');
					case KalturaUserStatus.DELETED:
						res = ResourceManager.getInstance().getString('admin', 'deleted');
				}
				return res;
			}


			/**
			 * translate last login data to something readable
			 * */
			private function getLastLogin(item:Object, column:DataGridColumn):String {
				//TODO + implement getLastLogin when we know what the server data looks like
				return formatDate(item.lastLoginTime);
			}


			/**
			 * translate last login data to something readable
			 * */
			private function getUserRole(item:Object, column:DataGridColumn):String {
				//TODO + implement getUserRole when we know what the server data looks like
				// need to scan all partner's roles list and get the correct one.
				return item.roleId;
			}


			/**
			 * perform selected action on selected entry
			 * (used in item renderer)
			 * */
			public function onActionSelected(event:ListEvent):void {
				switch (event.target.selectedItem) {
					case resourceManager.getString('admin', 'edit'):
						editEntry();
						break;
					case resourceManager.getString('admin', 'un_block'):
						confirmBlock();
						break;
					case resourceManager.getString('admin', 'delete'):
						confirmDelete();
						break;
				}
				(event.target as ComboBox).selectedIndex = -1;
			}
			
			// ==================================================================
			// gettesr / setters
			// ==================================================================

			public function get selectedUser():KalturaUser {
				return selectedItem as KalturaUser;
			}
			
		]]>
	</mx:Script>

	<mx:columns>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4" dataField="status" labelFunction="{getUserStatus}"
						   headerText="{resourceManager.getString('admin', 'user_status')}"
						   headerStyleName="centerTableColumnHeader"/>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4" dataField="fullName"
						   headerText="{resourceManager.getString('admin', 'user_name')}"
						   headerStyleName="centerTableColumnHeader"/>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4" dataField="id"
						   headerText="{resourceManager.getString('admin', 'user_id')}"
						   headerStyleName="centerTableColumnHeader"/>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4" dataField="email"
						   headerText="{resourceManager.getString('admin', 'user_email')}"
						   headerStyleName="centerTableColumnHeader"/>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4" dataField="roleId" labelFunction="{getUserRole}"
						   headerText="{resourceManager.getString('admin', 'user_role')}"
						   headerStyleName="centerTableColumnHeader"/>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4" dataField="lastLoginTime" labelFunction="{getLastLogin}"
						   headerText="{resourceManager.getString('admin', 'user_last_login')}"
						   headerStyleName="centerTableColumnHeader"/>
		<mx:DataGridColumn paddingLeft="4" paddingRight="4"
						   headerText="{resourceManager.getString('admin', 'user_actions')}"
						   headerStyleName="centerTableColumnHeader">
			<mx:itemRenderer>
				<mx:Component>
					<mx:VBox width="100%" height="100%" verticalAlign="middle" paddingLeft="2"
							 horizontalScrollPolicy="off" verticalScrollPolicy="off">
						<mx:ComboBox width="130" selectedIndex="-1"
									 prompt="{resourceManager.getString('admin','select_action')}"
									 change="{outerDocument.onActionSelected(event)}">
							<mx:dataProvider>
								<mx:String>{resourceManager.getString('admin','edit')}</mx:String>
								<mx:String>{resourceManager.getString('admin','un_block')}</mx:String>
								<mx:String>{resourceManager.getString('admin','delete')}</mx:String>
							</mx:dataProvider>
						</mx:ComboBox>
					</mx:VBox>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
	</mx:columns>
</mx:DataGrid>
