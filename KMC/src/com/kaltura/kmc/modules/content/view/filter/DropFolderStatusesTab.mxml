<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%">
	<mx:Metadata>
		[Event(name="filterChanged", type="flash.events.Event")] 
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.kaltura.types.KalturaDropFolderFileStatus;
			import com.kaltura.types.KalturaEntryReplacementStatus;
			import com.kaltura.vo.KalturaBaseEntryFilter;
			import com.kaltura.vo.KalturaDropFolderFileFilter;
			import com.kaltura.vo.KalturaMediaEntryFilter;
			
			
			public function setFilter(filterVo:KalturaDropFolderFileFilter):void {
				if (!filterVo.statusIn) {
					allDropStatusBtn.selected = true;
					pendingBtn.selected = false;
					downloadingBtn.selected = false;
					errDownloadingBtn.selected = false;
					errDeletingBtn.selected = false;
				}
				else {
					var dropStatusArr:Array = filterVo.statusIn.split(',');
					for each (var statusCode:String in dropStatusArr) {
						switch (statusCode) {
							case KalturaDropFolderFileStatus.PENDING:
								pendingBtn.selected = true;
								break;
							case KalturaDropFolderFileStatus.DOWNLOADING:
								downloadingBtn.selected = true;
								break;
							case KalturaDropFolderFileStatus.ERROR_DOWNLOADING:
								errDownloadingBtn.selected = true;
								break;
							case KalturaDropFolderFileStatus.ERROR_DELETING:
								errDeletingBtn.selected = true;
								break;
						}
					}
				}
			}
			
			/**
			 * filter by drop folder status
			 * */
			public function getFilterString():String {
				var dropFolderFileStatusArray:Array = [];
				
				if (allDropStatusBtn.selected) {
					dropFolderFileStatusArray.push(KalturaDropFolderFileStatus.ERROR_DELETING, KalturaDropFolderFileStatus.ERROR_DOWNLOADING,
					KalturaDropFolderFileStatus.PENDING,KalturaDropFolderFileStatus.DOWNLOADING);
				}
				else {
					if (pendingBtn.selected) { // pending
						dropFolderFileStatusArray.push(KalturaDropFolderFileStatus.PENDING);
					}
					if (downloadingBtn.selected) { // downloading
						dropFolderFileStatusArray.push(KalturaDropFolderFileStatus.DOWNLOADING);
					}
					if (errDeletingBtn.selected) { // error deleting
						dropFolderFileStatusArray.push(KalturaDropFolderFileStatus.ERROR_DELETING);
					}
					if (errDownloadingBtn.selected) { // error downloadin
						dropFolderFileStatusArray.push(KalturaDropFolderFileStatus.ERROR_DOWNLOADING);
					}		
				}
				return dropFolderFileStatusArray.join(',');
			}
			
			/**
			 * user select to choose all replacement status
			 */
			private function onAllDropStatusClicked(evt:Event):void {
				var isSelected:Boolean = evt.target.selected;
				if (!isSelected) {
					(evt.target as Button).selected = true;
					pendingBtn.selected = false;
					downloadingBtn.selected = false;
					errDownloadingBtn.selected = false;
					errDeletingBtn.selected = false;
					dispatchEvent(new Event(BaseFilter.FILTER_CHANGED));
				}
			}
			
			
			/**
			 * one of the status buttons was clicked
			 */
			private function changeDropStatusFilter(evt:Event):void {
				//if a moderation button was selected deselect the all moderation status 
				if ((evt.target as Button).selected) {
					allDropStatusBtn.selected = false;
				}
				//if non is selected - highlight the 'allModeration' button
				if (validateDropStatus()) {
					allDropStatusBtn.selected = true;
				}
				dispatchEvent(new Event(BaseFilter.FILTER_CHANGED));
			}
			
			
			/**
			 * check if all drop status buttons are selected - if non is selected return true
			 * if one of them is selected - return false
			 */
			private function validateDropStatus():Boolean {
				return !pendingBtn.selected && !downloadingBtn.selected && !errDeletingBtn.selected && !errDownloadingBtn.selected;
			}
				
			
			public function get buttons():Array {
				return [allDropStatusBtn, pendingBtn, downloadingBtn, errDeletingBtn, errDownloadingBtn];
			}
		]]>
	</mx:Script>
	<mx:Button id="allDropStatusBtn" width="100%" selected="true"
			   label="{resourceManager.getString('cms', 'allStatuses')}" buttonMode="true"
			   click="{onAllDropStatusClicked(event)}" styleName="mainFilterGroupButton"/>
	<mx:Button id="pendingBtn" width="100%" selected="false" label="{resourceManager.getString('cms', 'pendingBtn')}"
			   buttonMode="true" toggle="true" styleName="innerFilterGroupButton"
			   click="{changeDropStatusFilter(event)}"/>
	<mx:Button id="downloadingBtn" width="100%" selected="false" label="{resourceManager.getString('cms', 'downloadingBtn')}"
			   buttonMode="true" toggle="true" styleName="innerFilterGroupButton"
			   click="{changeDropStatusFilter(event)}"/>
	<mx:Button id="errDownloadingBtn" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'errDownloadingBtn')}" buttonMode="true" toggle="true"
			   styleName="innerFilterGroupButton" click="{changeDropStatusFilter(event)}"/>
	<mx:Button id="errDeletingBtn" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'errDeletingBtn')}" buttonMode="true" toggle="true"
			   styleName="innerFilterGroupButton" click="{changeDropStatusFilter(event)}"/>
	
</mx:VBox>
