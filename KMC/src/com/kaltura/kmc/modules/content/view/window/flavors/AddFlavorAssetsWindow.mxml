<?xml version="1.0" encoding="utf-8"?>
<!---
	A popup window that allows matching files with the flavor they represent. 
	The same window with different configurations will be used for upload, link and import.
	Should have a single file state: hide the "add more files" options, use flavorAsset.update 
	instead of flavorAsset.add or media.update.
	
	Properties:
	•	state:String - upload / import / link 
-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
		xmlns:containers="com.kaltura.containers.*" 
		xmlns:flavors="com.kaltura.kmc.modules.content.view.window.flavors.*"
		width="550" height="400" styleName="TitleWindowType2" 
		showCloseButton="true" close="closeHandler(event)"
		creationComplete="titlewindow1_creationCompleteHandler(event)"
		title="Add Video">

	<mx:Script>
		<![CDATA[
			import com.kaltura.kmc.modules.content.view.window.entrydetails.EntryFlavors;
			import com.kaltura.kmc.modules.content.vo.ConversionProfileWithFlavorParamsVo;
			import com.kaltura.kmc.modules.content.vo.UploadFileVo;
			import com.kaltura.managers.FileUploadManager;
			import com.kaltura.types.KalturaEntryStatus;
			import com.kaltura.types.KalturaMediaType;
			import com.kaltura.vo.FileUploadVO;
			import com.kaltura.vo.KalturaBaseEntry;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			
			[Bindable]
			/**
			 * hide the "add more files" options,
			 * use flavorAsset.update instead of flavorAsset.add or media.update.
			 * */
			public var allowAddFiles:Boolean = true;
			
			/**
			 * @copy #entry
			 * */
			private var _entry:KalturaBaseEntry;
			
			[Bindable]
			/**
			 * list of available conversion profiles and their
			 * respective flavorparam ids
			 * <code>ConversionProfileWithFlavorParamsVo</code> objects
			 * */
			public var conversionProfiles:ArrayCollection;
			
			[Bindable]
			/**
			 * <code>UploadFileVo</code> objects. <br>
			 * when passed fro outside the objects only have fileData and fileName attributes popuplated. <br>
			 * flavors attribute is set in FilesTable.(set)flavors.<br>
			 * flavorParamId attribute is initialized in FlavorRenderer.selectFlavor and set 
			 * 		in FilesTable.flavorSelected
			 * */
			public var filesList:ArrayCollection;


			/**
			 * Submit handler:
			 * 	•	Upload – add the relevant files to FileUploadManager.
			 * 	•	Import – trigger media.add with matching KalturaURLResource objects.
			 * 	•	Link – trigger media.add with matching KalturaNetStorageResource objects.
			 * */
			protected function submit(event:MouseEvent):void {
				//TODO - handle link, import (phase 2)
				var n:int = filesList.length;
				var uploader:FileUploadManager = FileUploadManager.getInstance();
				var ufv:UploadFileVo;
				// conversion profile id
				var cnvrtProfId:String = (cnvrtProfCb.selectedItem as ConversionProfileWithFlavorParamsVo).profile.id.toString();
				// action
				var action:String = FileUploadVO.ACTION_NONE;
				if (_entry.status == KalturaEntryStatus.NO_CONTENT) {
					action = FileUploadVO.ACTION_ADD;
				}
				else if (!allowAddFiles) {
					// replace a single flavor asset
					action = FileUploadVO.ACTION_UPDATE;
				}
				
				// group id
				var groupid:String = '';
				if (action == FileUploadVO.ACTION_ADD || FileUploadVO.ACTION_NONE) {
					// group actions: adding flavors to a no_content entry, or replacing multiple 
					// 		flavours while creating replacement entry.
					groupid = _entry.id;
				}
				// add uploads to the FileUploadManager
				for (var i:int = 0; i<n; i++) {
					ufv = filesList[i] as UploadFileVo;
					uploader.addUpload(_entry.id, ufv.fileData, action, ufv.flavorParamId, ufv.flavorAssetId, cnvrtProfId, groupid);
				}
				// close the popup
				closeHandler();
			}
			
			
			protected function cnvrtPrfLbl(itemObj:ConversionProfileWithFlavorParamsVo):String{
				return itemObj.profile.name;
			}

			
			/**
			 * remove the popup
			 * */
			protected function closeHandler(event:CloseEvent = null):void {
				PopUpManager.removePopUp(this);
			}
			
			/**
			 * open the file browser 
			 * */
			protected function addMoreFiles():void {
				var fileReferenceList:FileReferenceList = new FileReferenceList();
				fileReferenceList.addEventListener(Event.SELECT, onFlavorsSelected);
				var mediaType:int = parseInt(_entry.type);
				if (mediaType == KalturaMediaType.VIDEO) 
					fileReferenceList.browse(new Array(getTypeFilter('video',EntryFlavors.VIDEO_TYPES)));
				else if (mediaType == KalturaMediaType.AUDIO)
					fileReferenceList.browse(new Array(getTypeFilter('audio',EntryFlavors.AUDIO_TYPES)));
			}
			
			/**
			 * add the selected files to the files list
			 * */
			private function onFlavorsSelected(event:Event):void {
				var files:Array = (event.target as FileReferenceList).fileList;
				for each (var fileReference:FileReference in files) {
					var uploadFile:UploadFileVo = new UploadFileVo();
					uploadFile.fileName = fileReference.name;
					uploadFile.fileData = fileReference;
					filesList.addItem(uploadFile);
				}
				// trigger the binding to get the rest of the fileVo attributes set
				filesTable.dataProvider = filesList;
			}
			
			/**
			 * will return fileFilter according to given name and file types
			 * */
			private function getTypeFilter(localeKey:String, types:String):FileFilter {
				return new FileFilter(resourceManager.getString('cms',localeKey) +  "(" + types+ ")" , types );
			}


			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void {
				this.mx_internal::closeButton.buttonMode = true;
			}

			/**
			 * the entry being edited
			 * */
			public function get entry():KalturaBaseEntry {
				return _entry;
			}

			/**
			 * @private
			 */
			public function set entry(value:KalturaBaseEntry):void {
				_entry = value;
				if (value.status == KalturaEntryStatus.NO_CONTENT) {
					title = ResourceManager.getInstance().getString('cms', 'windowTitleAdd');
				}
				else {
					title = ResourceManager.getInstance().getString('cms', 'windowTitleUpdate');
				}
			}


		]]>
	</mx:Script>
	
	<mx:HBox>
		<mx:Label text="Conversion Profile:" />
		<mx:ComboBox id="cnvrtProfCb" dataProvider="{conversionProfiles}" labelFunction="cnvrtPrfLbl" selectedIndex="0"/>
	</mx:HBox>
	<mx:Label text="Uploaded Files" fontWeight="bold" />
	<flavors:FilesTable id="filesTable" width="100%" flavors="{cnvrtProfCb.selectedItem.flavors}"
						dataProvider="{filesList}" allowAddFiles="{allowAddFiles}"
						addFiles="addMoreFiles()"/>
	
	<mx:ControlBar>
		<mx:Button id="submitBtn" label="{ResourceManager.getInstance().getString('cms', 'submitUploadLabel')}" click="submit(event)"/>
	</mx:ControlBar>
</mx:TitleWindow>
