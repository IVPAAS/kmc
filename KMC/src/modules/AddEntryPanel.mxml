<?xml version="1.0" encoding="utf-8"?>
<!---
	 a menu that allows adding content
-->
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" width="200" layout="vertical" styleName="addPanel"
		   preinitialize="creationCompleteHandler(event)"
		   implements="com.kaltura.kmc.business.IKmcPlugin,com.kaltura.kmc.business.IPopupMenu">
	<mx:Metadata>
		[ResourceBundle("create")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import com.kaltura.KalturaClient;
			import com.kaltura.kmc.business.IKmcPlugin;
			import com.kaltura.kmc.business.IPopupMenu;
			import com.kaltura.kmc.business.JSGate;
			import com.kaltura.kmc.business.MenuHandler;
			import com.kaltura.kmc.events.KmcNavigationEvent;
			import com.kaltura.kmc.modules.create.BulkUploader;
			import com.kaltura.kmc.modules.create.MultipleMediaFilesSelector;
			import com.kaltura.kmc.modules.create.view.FileUploadSettings;
			
			import mx.collections.ArrayCollection;
			import mx.core.Application;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			
			private const BTN_WIDTH:int = 150;

			private var _showingHandler:MenuHandler;

			

			/**
			 * application root for the menu handler
			 * */
			private var _approot:DisplayObjectContainer;

			/**
			 * @copy #client
			 * */
			private var _kc:KalturaClient;

			
			protected function showUploadSettingsWindow(e:Event):void {
				e.target.removeEventListener(MultipleMediaFilesSelector.FILES_SELECTED, showUploadSettingsWindow);
				var fus:FileUploadSettings = new FileUploadSettings();
				fus.client = _kc;
				fus.uploadFiles((e.target as MultipleMediaFilesSelector).getFiles());
				PopUpManager.addPopUp(fus, (Application.application as DisplayObject), true);
				PopUpManager.centerPopUp(fus);
			}

			/**
			 * Opens a desktop file selection pop-up. Allowing video, audio and image files selection
			 * */
			protected function btnUpload_clickHandler(event:MouseEvent):void {
				var neu:MultipleMediaFilesSelector = new MultipleMediaFilesSelector();
				neu.addEventListener(MultipleMediaFilesSelector.FILES_SELECTED, showUploadSettingsWindow);
				neu.doFileUpload();
			}
			
			


			/**
			 * opens a KCW with only webcam recording option
			 * */
			protected function btnWebcam_clickHandler(event:MouseEvent):void {
				JSGate.openKcwWebcam();
			}


			/**
			 * Opens a desktop file selection pop-up, allowing csv/xml files selection
			 * */
			protected function btnBulk_clickHandler(event:MouseEvent):void {
				var bu:BulkUploader = new BulkUploader(_kc);
				bu.doUpload();
			}


			/**
			 * Opens a KCW with audio/video/image online services options only
			 * */
			protected function btnServices_clickHandler(event:MouseEvent):void {
				JSGate.openKcwServices();
			}


			/**
			 * downloads csv and xml samples
			 * */
			protected function btnSamples_clickHandler(event:MouseEvent):void {
				// TODO Auto-generated method stub
			}


			/**
			 * Opens a video entry drill down in a "new entry" mode on top
			 * of content management page
			 * */
			protected function btnVideo_clickHandler(event:MouseEvent):void {
				dispatchEvent(new KmcNavigationEvent(KmcNavigationEvent.NAVIGATE, "content", "manage", {kmcFunction: "content.createVideoEntry"}, true));
				hidePanel();
			}


			/**
			 * Opens an audio entry drill down in a "new entry" mode on top
			 * of content management page
			 * */
			protected function btnAudio_clickHandler(event:MouseEvent):void {
				dispatchEvent(new KmcNavigationEvent(KmcNavigationEvent.NAVIGATE, "content", "manage", {kmcFunction: "content.createAudioEntry"}, true));
				hidePanel();
			}


			/**
			 * Opens the new live stream window on top of content management page
			 * */
			protected function btnLive_clickHandler(event:MouseEvent):void {
				dispatchEvent(new KmcNavigationEvent(KmcNavigationEvent.NAVIGATE, "content", "manage", {kmcFunction: "content.createLiveEntry"}, true));
				hidePanel();
			}




			protected function creationCompleteHandler(event:FlexEvent):void {
				_showingHandler = new MenuHandler(this, "positionAddPanel");
				if (_approot) {
					_showingHandler.setRoot(_approot);
				}
			}


			public function setRoot(doc:DisplayObjectContainer):void {
				_approot = doc;
				if (_showingHandler) {
					_showingHandler.setRoot(doc);
				}
			}


			/**
			 * show the panel
			 * */
			public function showPanel():void {
				_showingHandler.showPanel();
			}


			/**
			 * hide the panel
			 */
			public function hidePanel(me:MouseEvent = null):void {
				_showingHandler.hidePanel(me);
			}


			/**
			 * position the panel
			 * @param right
			 */
			public function positionPanel(right:Number):void {
				_showingHandler.positionPanel(right);
			}


			/**
			 * KalturaClient used for API calls
			 * */
			public function get client():KalturaClient {
				return _kc;
			}


			public function set client(value:KalturaClient):void {
				_kc = value;
			}
		]]>
	</mx:Script>
	<mx:Label styleName="addPanelLabel" text="{resourceManager.getString('create', 'upload_lbl')}"
			  includeInLayout="{uploadBox.includeInLayout}" visible="{uploadBox.visible}"/>
	<mx:VBox id="uploadBox" styleName="addPanelButtonBox">
		<mx:Button id="btnUpload" click="btnUpload_clickHandler(event)" width="{BTN_WIDTH}" styleName="addPanelButton"
				   label="{resourceManager.getString('create', 'upload_btn')}"/>
		<mx:Button id="btnWebcam" click="btnWebcam_clickHandler(event)" width="{BTN_WIDTH}" styleName="addPanelButton"
				   label="{resourceManager.getString('create', 'webcam_btn')}"/>
	</mx:VBox>
	<mx:Label styleName="addPanelLabel" text="{resourceManager.getString('create', 'import_lbl')}"
			  includeInLayout="{importBox.includeInLayout}" visible="{importBox.visible}"/>
	<mx:VBox id="importBox" styleName="addPanelButtonBox">
		<mx:Button id="btnBulk" click="btnBulk_clickHandler(event)" width="{BTN_WIDTH}" styleName="addPanelButton"
				   label="{resourceManager.getString('create', 'bulk_btn')}"/>
		<mx:Button id="btnServices" click="btnServices_clickHandler(event)" width="{BTN_WIDTH}"
				   styleName="addPanelButton" label="{resourceManager.getString('create', 'services_btn')}"/>
		<mx:LinkButton id="btnSamples" click="btnSamples_clickHandler(event)" styleName="addPanelLinkButton"/>
	</mx:VBox>
	<mx:Label styleName="addPanelLabel" text="{resourceManager.getString('create', 'prepare_lbl')}"
			  includeInLayout="{prepareBox.includeInLayout}" visible="{prepareBox.visible}"/>
	<mx:VBox id="prepareBox" styleName="addPanelButtonBox">
		<mx:Button id="btnVideo" click="btnVideo_clickHandler(event)" width="{BTN_WIDTH}" styleName="addPanelPrepButton"
				   label="{resourceManager.getString('create', 'video_btn')}"/>
		<mx:Button id="btnAudio" click="btnAudio_clickHandler(event)" width="{BTN_WIDTH}" styleName="addPanelPrepButton"
				   label="{resourceManager.getString('create', 'audio_btn')}"/>
		<mx:Button id="btnLive" click="btnLive_clickHandler(event)" width="{BTN_WIDTH}" styleName="addPanelPrepButton"
				   label="{resourceManager.getString('create', 'live_btn')}"/>
	</mx:VBox>
</mx:Module>
