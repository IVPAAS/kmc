<?xml version="1.0" encoding="utf-8"?>
<!---
live streaming control tab of EntryDetailsWin
-->
<mx:Module layout="vertical" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		   implements="com.kaltura.edw.business.IDrilldownPanel"
		   xmlns:control="com.kaltura.edw.control.*"
		   label="{resourceManager.getString('drilldown', 'liveStream')}" xmlns:live="com.kaltura.edw.view.live.*">
	<mx:Metadata>
		[Event(name="validationComplete", type="com.kaltura.edw.events.ValidationResultEvent")] 
		[Event(name="panelDataSaved", type="com.kaltura.edw.events.InternalKedEvent")] 
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.kaltura.edw.business.EntryLiveStreamingHelper;
			import com.kaltura.edw.business.KedJSGate;
			import com.kaltura.edw.business.permissions.PermissionManager;
			import com.kaltura.edw.constants.PanelConsts;
			import com.kaltura.edw.control.events.ProfileEvent;
			import com.kaltura.edw.events.GeneralNonCairngormEvent;
			import com.kaltura.edw.events.InternalKedEvent;
			import com.kaltura.edw.events.ValidationResultEvent;
			import com.kaltura.edw.model.datapacks.FlavorsDataPack;
			import com.kaltura.edw.view.EntryDetailsWin;
			import com.kaltura.edw.view.window.SettingsExample;
			import com.kaltura.kmvc.model.IDataPackRepository;
			import com.kaltura.types.KalturaSourceType;
			import com.kaltura.vo.KalturaBaseEntry;
			import com.kaltura.vo.KalturaLiveStreamBitrate;
			import com.kaltura.vo.KalturaLiveStreamEntry;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;

			

			private var _pop:SettingsExample;

			[Bindable]
			private var _selectedEntry:KalturaLiveStreamEntry;


			private var _dpModel:IDataPackRepository;
			
			private var _cw:ChangeWatcher;
			
			[Bindable]
			public var liveProfiles:ArrayCollection;
			
			/**
			 * RnP
			 * */
			public var enableKalturaLive:Boolean = true;

			public function set selectedEntry(value:KalturaBaseEntry):void {
				if (value is KalturaLiveStreamEntry) {
					_selectedEntry = value as KalturaLiveStreamEntry;
				}
				else {
					_selectedEntry = null;
				}
			}


			public function get selectedEntry():KalturaBaseEntry {
				return _selectedEntry;
			}


			public function get dataPackModel():IDataPackRepository {
				return _dpModel;
			}


			public function set dataPackModel(value:IDataPackRepository):void {
				_dpModel = value;
			}

			
			
			public function get helpAnchor():String {
				return "section_live_stream";
			}


			public function initData():void {
				if (_selectedEntry) {
					bitrateConfig.initData(_selectedEntry.bitrates);
				}
			}


			public function validate():void {
				var success:Boolean = true; // validation result
				var errorMessage:String;
				var errorTitle:String;
				if (_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM) { // nothing to validate for kaltura live
					var bitrates:Array = bitrateConfig.getBitrates();
					if (!bitrates) {
						//failed validation
						success = false;
						errorMessage = resourceManager.getString('drilldown', 'bitrateValidation');
						errorTitle = resourceManager.getString('drilldown', 'liveStreamError');
					}
				}
				var e:ValidationResultEvent = new ValidationResultEvent(ValidationResultEvent.VALIDATION_COMPLETE, success, errorMessage, errorTitle);
				dispatchEvent(e);
			}


			public function destroy():void {
			}


			public function clear():void {
			}


			public function init():void {
				PermissionManager.getInstance().applyAllAttributes(this, PanelConsts.LIVE_STREAM_PANEL);
				// for kaltura live stream - get live profiles
				if (enableKalturaLive) {// set by RnP
					if (_cw) {
						_cw.unwatch();
					}
					var fdp:FlavorsDataPack = _dpModel.getDataPack(FlavorsDataPack) as FlavorsDataPack;
					_cw = BindingUtils.bindProperty(this, "liveProfiles", fdp, "liveConversionProfiles");
					controller.dispatch(new ProfileEvent(ProfileEvent.LIST_LIVE_CONVERSION_PROFILES));
				}
			}


			public function isChanged():Boolean {
				var result:Boolean;
				if (_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM) {
					// get from conversion profile panel
					result = convprofConfig.isChanged(); 
				}
				else {
					// get from bitrates panel
					result = bitrateConfig.isChanged();
				}
				return result;
			}

			


			public function save():void {
				if (_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM) {
				// get from conversion profile panel
					_selectedEntry.conversionProfileId = convprofConfig.getSelectedProfile();
				}
				else {
				// get from bitrates panel
					var bitrates:Array = bitrateConfig.getBitrates();
					if (bitrates != null) {
						_selectedEntry.bitrates = bitrates;
					}
				}
				dispatchEvent(new InternalKedEvent(InternalKedEvent.PANEL_DATA_SAVED));
			}



			private function onRollOver(value:Number):void {
				_pop = new SettingsExample();
				switch (value) {
					case 1:
						_pop.stringToShow = resourceManager.getString('drilldown', 'screenshot1');
						_pop.imageClass = 'url1';
						_pop.imgWidth = 351;
						_pop.imgHeight = 156;

						break;
					case 2:
						_pop.stringToShow = resourceManager.getString('drilldown', 'screenshot1');
						_pop.imageClass = 'url2';
						_pop.imgWidth = 278;
						_pop.imgHeight = 191;
						break;
					case 3:
						_pop.stringToShow = resourceManager.getString('drilldown', 'screenshot3') + "\n" + resourceManager.getString('drilldown', 'screenshot1');
						_pop.imageClass = 'url3';
						_pop.imgWidth = 289;
						_pop.imgHeight = 100;
						break;
				}
				PopUpManager.addPopUp(_pop, this, true);
				PopUpManager.centerPopUp(_pop);
			}


			private function onHelp(event:TextEvent):void {
				var e:GeneralNonCairngormEvent = new GeneralNonCairngormEvent(EntryDetailsWin.HELP_REQUEST, true);
				e.data = helpAnchor;
				dispatchEvent(e);
			}


			private function fmeExport():void {
				var xml:XML =
					<flashmedialiveencoder_profile>
						<preset>
							<name>Custom</name>
							<description></description>
						</preset>
						<capture>
							<video>
								<device></device>
								<crossbar_input>0</crossbar_input>
								<frame_rate></frame_rate>
								<size>
									<width></width>
									<height></height>
								</size>
							</video>
							<audio>
								<device></device>
								<crossbar_input>0</crossbar_input>
								<sample_rate></sample_rate>
								<channels>2</channels>
								<input_volume>75</input_volume>
							</audio>
						</capture>
						<encode>
							<video>
								<format></format>
								<datarate></datarate>
								<outputsize></outputsize>
								<advanced>
									<profile></profile>
									<level></level>
									<keyframe_frequency></keyframe_frequency>
								</advanced>
								<autoadjust>
									<enable></enable>
									<maxbuffersize></maxbuffersize>
									<dropframes>
										<enable></enable>
									</dropframes>
									<degradequality>
										<enable></enable>
										<minvideobitrate></minvideobitrate>
										<preservepfq></preservepfq>
									</degradequality>
								</autoadjust>
							</video>
							<audio>
								<format></format>
								<datarate></datarate>
							</audio>
						</encode>
						<restartinterval>
							<days></days>
							<hours></hours>
							<minutes></minutes>
						</restartinterval>
						<reconnectinterval>
							<attempts></attempts>
							<interval></interval>
						</reconnectinterval>
						<output>
							<rtmp>
								<url></url>
								<backup_url></backup_url>
								<stream></stream>
							</rtmp>
						</output>
						<metadata/>
						<preview>
							<video>
								<input>
									<zoom>100%</zoom>
								</input>
								<output>
									<zoom>100%</zoom>
								</output>
							</video>
							<audio></audio>
						</preview>
						<log>
							<level>100</level>
							<directory></directory>
						</log>
					</flashmedialiveencoder_profile>
					;
				
				// capture devices
				var captureXML:XML = xml.capture[0];
				var cam:Camera = Camera.getCamera();
				if (cam) {
					captureXML.video.device.appendChild(cam.name);
					captureXML.video.frame_rate.appendChild(cam.fps);
					captureXML.video.size.width.appendChild(cam.width);
					captureXML.video.size.height.appendChild(cam.height);
				}
				var mic:Microphone = Microphone.getMicrophone();
				if (mic) {
					captureXML.audio.device.appendChild(mic.name);
				}

				// assign outputs 
				var outputXML:XML = xml.output[0];
				(outputXML.rtmp.url[0] as XML).appendChild(_selectedEntry.primaryBroadcastingUrl);
				(outputXML.rtmp.backup_url[0] as XML).appendChild(_selectedEntry.secondaryBroadcastingUrl);
				(outputXML.rtmp.stream[0] as XML).appendChild(_selectedEntry.streamName);

				// assign bitrates
				var bitratesString:String = "";
				var dimensionsStrings:String = "";
				var bitrates:Array;
				if (_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM) {
					bitrates = convprofConfig.getBitrates();
				}
				else {
					bitrates = bitrateConfig.getBitrates();
				}
				var br:KalturaLiveStreamBitrate;
				for (var i:int = 0; i<bitrates.length; i++) {
					br = bitrates[i] as KalturaLiveStreamBitrate;
					bitratesString += br.bitrate.toString() + ";";
					dimensionsStrings += br.width.toString() + "x" + br.height.toString() + ";";
				}
				
				var encode:XML = xml.encode[0] as XML;
				(encode.video.datarate[0] as XML).appendChild(bitratesString);
				(encode.video.outputsize[0] as XML).appendChild(dimensionsStrings);
				
				encode.audio.format.appendChild("MP3");
				encode.audio.datarate.appendChild("128");
				
				// additional
				if (_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM || _selectedEntry.sourceType == KalturaSourceType.AKAMAI_UNIVERSAL_LIVE) {
					encode.video.format.appendChild("H.264");
					encode.video.advanced.profile.appendChild("Baseline");
					encode.video.advanced.level.appendChild("3.1");
					encode.video.advanced.keyframe_frequency.appendChild("3 seconds");
						
					xml.capture.audio.sample_rate.appendChild("44100");
				}

				var myFile:FileReference = new FileReference();
				myFile.save(xml.toXMLString(), resourceManager.getString('drilldown', 'ExportToFme.xml', [_selectedEntry.id]));

			}
			
			
			private function openLiveReport(event:MouseEvent):void
			{
				KedJSGate.openLiveAnalyticsDrilldown(_selectedEntry.id, _selectedEntry.name);
			}
			
		]]>
	</mx:Script>
	<control:LivestreamTabController id="controller"/>
	
	<mx:VBox width="100%" styleName="noPadding" visible="{_selectedEntry.sourceType != KalturaSourceType.MANUAL_LIVE_STREAM}"
			 includeInLayout="{_selectedEntry.sourceType != KalturaSourceType.MANUAL_LIVE_STREAM}">
		<mx:Label text="{resourceManager.getString('drilldown', 'brodcastingSettings')}" styleName="drillDownLabel"/>
		<mx:Text width="100%" htmlText="{resourceManager.getString('drilldown', 'broadcastingText')}" link="onHelp(event)"/>
		<mx:Spacer height="20"/>
	
		<!-- broadcast urls -->
		<mx:HBox width="100%">
			<mx:Label text="{resourceManager.getString('drilldown', 'Broadcastingurls')}" styleName="drillDownLabel"/>
			<mx:Button styleName="help" click="{onRollOver(1)}" buttonMode="true"/>
		</mx:HBox>
	
		<mx:HBox width="100%">
			<mx:Label text="{resourceManager.getString('drilldown', 'PrimaryURL')}" width="{EntryLiveStreamingHelper.PREFIXES_WIDTH}"
					  styleName="drillDownLabel"/>
			<mx:Label id="primaryUrl" text="{_selectedEntry.primaryBroadcastingUrl}" selectable="true" truncateToFit="false"
					  width="{EntryLiveStreamingHelper.BROADCASTING_WIDTH}" styleName="drillDownSubLabel"/>
		</mx:HBox>
	
		<mx:HBox width="100%">
			<mx:Label text="{resourceManager.getString('drilldown', 'BackupURL')}" width="{EntryLiveStreamingHelper.PREFIXES_WIDTH}"
					  styleName="drillDownLabel"/>
			<mx:Label id="backupUrl" text="{_selectedEntry.secondaryBroadcastingUrl}" selectable="true" truncateToFit="false"
					  width="{EntryLiveStreamingHelper.BROADCASTING_WIDTH}" styleName="drillDownSubLabel"/>
			<mx:Spacer width="30"/>
		</mx:HBox>
	
		<mx:HBox width="100%">
			<mx:Label text="{resourceManager.getString('drilldown', 'streamName')}" width="{EntryLiveStreamingHelper.PREFIXES_WIDTH}"
					  styleName="drillDownLabel"/>
			<mx:Label id="streamName" text="{_selectedEntry.streamName}" selectable="true" truncateToFit="false"
					  width="{EntryLiveStreamingHelper.BROADCASTING_WIDTH}" styleName="drillDownSubLabel"/>
		</mx:HBox>
	
		<mx:Spacer height="20"/>
		
		<!-- Kaltura - rtsp urls -->
		<live:RtspInfo styleName="noPadding" width="100%" selectedEntry="{_selectedEntry}"
					   visible="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}"
					   includeInLayout="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}" />
	
		<!-- stream config - Akamai -->
		<live:AkamaiStreamConfig styleName="noPadding" width="100%" selectedEntry="{_selectedEntry}"
				 visible="{_selectedEntry.sourceType == KalturaSourceType.AKAMAI_UNIVERSAL_LIVE}"
				 includeInLayout="{_selectedEntry.sourceType == KalturaSourceType.AKAMAI_UNIVERSAL_LIVE}" />
		
		<!-- stream config - Kaltura -->
		<live:KalturaStreamConfig styleName="noPadding" width="100%" selectedEntry="{_selectedEntry}"
				 visible="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}"
				 includeInLayout="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}" />
		
		<!-- bitrate config -->
		<live:BitrateConfig id="bitrateConfig" width="100%" extrainfo="onRollOver(3)"
							visible="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}"
							includeInLayout="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}" />
			
		<!-- conv prof -->
		<live:ConversionProfileConfig id="convprofConfig" width="100%" selectedEntry="{_selectedEntry}" 
									  profiles="{liveProfiles}"
									  visible="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}"
									  includeInLayout="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}" />
		
		<!-- broadcast credentials -->
		<mx:HBox width="100%" visible="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}"
				 includeInLayout="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}">
			<mx:Label text="{resourceManager.getString('drilldown', 'broadcastinCredential')}" styleName="drillDownLabel"/>
			<mx:Button styleName="help" click="{onRollOver(2)}" buttonMode="true"/>			
		</mx:HBox>
	
		<mx:HBox width="100%" visible="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}"
				 includeInLayout="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}">
			<mx:Label text="{resourceManager.getString('drilldown', 'userName')}" width="{EntryLiveStreamingHelper.PREFIXES_WIDTH}"
					  styleName="drillDownLabel"/>
			<mx:Label id="userName" text="{_selectedEntry.streamUsername}" selectable="true" 
					  width="{EntryLiveStreamingHelper.BROADCASTING_WIDTH}" styleName="drillDownSubLabel"/>
			<mx:Spacer width="30"/>
		</mx:HBox>
	
		<mx:HBox width="100%" visible="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}"
				 includeInLayout="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}">
			<mx:Label text="{resourceManager.getString('drilldown', 'password')}" width="{EntryLiveStreamingHelper.PREFIXES_WIDTH}"
					  styleName="drillDownLabel"/>
			<mx:Label id="password" text="{_selectedEntry.streamPassword}" selectable="true"
					  width="{EntryLiveStreamingHelper.BROADCASTING_WIDTH}" styleName="drillDownSubLabel"/>
		</mx:HBox>
	
		<mx:Spacer height="20"/>
	
		<!-- IPs -->
		<live:IPsConfig width="100%" selectedEntry="{_selectedEntry}" 
						visible="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}"
						includeInLayout="{_selectedEntry.sourceType != KalturaSourceType.LIVE_STREAM}" />
		
		<mx:HBox width="100%" styleName="noPadding">
			<mx:Button id="exportBtn" label="{resourceManager.getString('drilldown', 'exportToFme')}" click="{fmeExport()}"/>
			<mx:LinkButton styleName="liveReportsButton" label="{resourceManager.getString('drilldown', 'openLiveReport')}" 
						   visible="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}"
						   includeInLayout="{_selectedEntry.sourceType == KalturaSourceType.LIVE_STREAM}"
						   click="openLiveReport(event)"/>
		</mx:HBox>
	</mx:VBox>
	
	<!-- manual stream -->
	<live:Manual id="manualWrap" width="100%" styleName="noPadding" selectedEntry="{_selectedEntry}"
			 visible="{_selectedEntry.sourceType == KalturaSourceType.MANUAL_LIVE_STREAM}"
			 includeInLayout="{_selectedEntry.sourceType == KalturaSourceType.MANUAL_LIVE_STREAM}" />
		
</mx:Module>
